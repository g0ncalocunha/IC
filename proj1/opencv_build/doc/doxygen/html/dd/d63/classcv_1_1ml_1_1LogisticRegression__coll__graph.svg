<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: cv::ml::LogisticRegression Pages: 1 -->
<svg width="151pt" height="650pt"
 viewBox="0.00 0.00 151.00 650.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 646)">
<title>cv::ml::LogisticRegression</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-646 147,-646 147,4 -4,4"/>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Implements Logistic Regression classifier.">
<polygon fill="#bfbfbf" stroke="black" points="0,-0.5 0,-222.5 143,-222.5 143,-0.5 0,-0.5"/>
<text text-anchor="middle" x="71.5" y="-210.5" font-family="Helvetica,sans-Serif" font-size="10.00">cv::ml::LogisticRegression</text>
<polyline fill="none" stroke="black" points="0,-203.5 143,-203.5 "/>
<text text-anchor="middle" x="71.5" y="-191.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="0,-184.5 143,-184.5 "/>
<text text-anchor="start" x="8" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ get_learnt_thetas()</text>
<text text-anchor="start" x="8" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ getIterations()</text>
<text text-anchor="start" x="8" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ getLearningRate()</text>
<text text-anchor="start" x="8" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ getMiniBatchSize()</text>
<text text-anchor="start" x="8" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ getRegularization()</text>
<text text-anchor="start" x="8" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ getTermCriteria()</text>
<text text-anchor="start" x="8" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ getTrainMethod()</text>
<text text-anchor="start" x="8" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ predict()</text>
<text text-anchor="start" x="8" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ setIterations()</text>
<text text-anchor="start" x="8" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ setLearningRate()</text>
<text text-anchor="start" x="8" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ setMiniBatchSize()</text>
<text text-anchor="start" x="8" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ setRegularization()</text>
<text text-anchor="start" x="8" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ setTermCriteria()</text>
<text text-anchor="start" x="8" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ setTrainMethod()</text>
<text text-anchor="start" x="8" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ create()</text>
<text text-anchor="start" x="8" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ load()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../db/d7d/classcv_1_1ml_1_1StatModel.html" target="_top" xlink:title="Base class for statistical models in OpenCV ML.">
<polygon fill="white" stroke="black" points="21,-259.5 21,-404.5 122,-404.5 122,-259.5 21,-259.5"/>
<text text-anchor="middle" x="71.5" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">cv::ml::StatModel</text>
<polyline fill="none" stroke="black" points="21,-385.5 122,-385.5 "/>
<text text-anchor="middle" x="71.5" y="-373.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="21,-366.5 122,-366.5 "/>
<text text-anchor="start" x="29" y="-354.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ calcError()</text>
<text text-anchor="start" x="29" y="-343.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ empty()</text>
<text text-anchor="start" x="29" y="-332.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ getVarCount()</text>
<text text-anchor="start" x="29" y="-321.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ isClassifier()</text>
<text text-anchor="start" x="29" y="-310.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ isTrained()</text>
<text text-anchor="start" x="29" y="-299.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ predict()</text>
<text text-anchor="start" x="29" y="-288.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ train()</text>
<text text-anchor="start" x="29" y="-277.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ train()</text>
<text text-anchor="start" x="29" y="-266.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ train()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M71.5,-249.33C71.5,-240.6 71.5,-231.62 71.5,-222.63"/>
<polygon fill="none" stroke="midnightblue" points="68,-249.45 71.5,-259.45 75,-249.45 68,-249.45"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="../../d3/d46/classcv_1_1Algorithm.html" target="_top" xlink:title="This is a base class for all more or less complex algorithms in OpenCV.">
<polygon fill="white" stroke="black" points="13.5,-441.5 13.5,-641.5 129.5,-641.5 129.5,-441.5 13.5,-441.5"/>
<text text-anchor="middle" x="71.5" y="-629.5" font-family="Helvetica,sans-Serif" font-size="10.00">cv::Algorithm</text>
<polyline fill="none" stroke="black" points="13.5,-622.5 129.5,-622.5 "/>
<text text-anchor="middle" x="71.5" y="-610.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="13.5,-603.5 129.5,-603.5 "/>
<text text-anchor="start" x="21.5" y="-591.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Algorithm()</text>
<text text-anchor="start" x="21.5" y="-580.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~Algorithm()</text>
<text text-anchor="start" x="21.5" y="-569.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ clear()</text>
<text text-anchor="start" x="21.5" y="-558.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ empty()</text>
<text text-anchor="start" x="21.5" y="-547.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ getDefaultName()</text>
<text text-anchor="start" x="21.5" y="-536.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ read()</text>
<text text-anchor="start" x="21.5" y="-525.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ save()</text>
<text text-anchor="start" x="21.5" y="-514.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ write()</text>
<text text-anchor="start" x="21.5" y="-503.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ write()</text>
<text text-anchor="start" x="21.5" y="-492.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ write()</text>
<text text-anchor="start" x="21.5" y="-481.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ load()</text>
<text text-anchor="start" x="21.5" y="-470.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ loadFromString()</text>
<text text-anchor="start" x="21.5" y="-459.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ read()</text>
<text text-anchor="start" x="21.5" y="-448.5" font-family="Helvetica,sans-Serif" font-size="10.00"># writeFormat()</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M71.5,-431.13C71.5,-422.13 71.5,-413.18 71.5,-404.56"/>
<polygon fill="none" stroke="midnightblue" points="68,-431.31 71.5,-441.31 75,-431.31 68,-431.31"/>
</g>
</g>
</svg>
